variables:
  GO111MODULE: "on"

before_script:
  - echo $CI_BUILD_REF
  - echo $CI_COMMIT_REF_SLUG
  - echo $CI_PROJECT_DIR
  - echo $GOPROXY
  - echo $GO111MODULE
  - ls -la
  - cp scripts/* /usr/local/bin

stages:
  - build
  - verify
  - containerize

build_app:
  image: golang:1.13.3
  stage: build
  allow_failure: false
  script:
    - go mod download
    - export VERSION=$(git-semver-describe --tags)
    - echo $VERSION
    - GOOS=linux GOARCH=amd64 go build -tags build -o communeism .
    - mkdir $CI_PROJECT_DIR/release
    - mv ./communeism $CI_PROJECT_DIR/release
  artifacts:
    paths:
      - $CI_PROJECT_DIR/release

go_test:
  image: golang:1.13.3
  stage: verify
  allow_failure: false
  script:
    - go mod download
    - go test -tags testing -race -cover ./...

golangci-lint:
  image: golang:1.13.3
  stage: verify
  allow_failure: true
  script:
    - go mod download
    - golangci-lint.sh -b $(go env GOPATH)/bin v1.21.0
    - cd $CI_PROJECT_DIR
    - golangci-lint run

gomod-check:
  image: golang:1.13.3
  stage: verify
  allow_failure: true
  script:
    - go mod download
    - go_mod_tidy.sh

#containerize_app:
#  image: docker:stable
#  stage: containerize
#  allow_failure: false
#  tags:
#    - unix
#    - docker
#    - multi
#  only:
#    - tags
#  except:
#    - branches
#  variables:
#    DOCKER_REGISTRY: snapshotregistry.rrdc.de:443
#    IMAGE_TAG: $DOCKER_REGISTRY/pizza:$CI_COMMIT_TAG
#  script:
#    - echo $CI_COMMIT_TAG
#    - echo $IMAGE_TAG
#    - echo $CI_REGISTRY_IMAGE
#    - echo $CI_COMMIT_REF_SLUG
#    - docker build -t $IMAGE_TAG -f ./Dockerfile .
#    - docker push $IMAGE_TAG
#    - docker rmi $(docker images --quiet --filter "dangling=true") || true
#    - docker volume rm $(docker volume ls -qf dangling=true) || true